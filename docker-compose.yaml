version: '3.7'
services:
  db:
    image: postgres:13.6
    restart: always
    environment:
      POSTGRES_USER: ${PG_USER:-postgres}
      POSTGRES_PASSWORD: ${PG_PASSWORD:-password}
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${PG_USER:-postgres}" ]
      interval: 3s
      timeout: 3s
      retries: 5
    ports:
      - '5432:5432'
    stdin_open: true
    tty: true
    volumes:
      - db:/var/lib/postgresql/data
  todo:
    image: todo
    user: nonroot
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
    ports:
      - 8080:8080
  opa:
    image: openpolicyagent/opa:0.38.0-rootless
    ports:
    - 8181:8181
    # WARNING: OPA is NOT running with an authorization policy configured. This
    # means that clients can read and write policies in OPA. If you are
    # deploying OPA in an insecure environment, be sure to configure
    # authentication and authorization on the daemon. See the Security page for
    # details: https://www.openpolicyagent.org/docs/security.html.
    command:
    - "run"
    - "--server"
    - "--log-level=debug"
    - "--log-format=json-pretty"
    - "--set=decision_logs.console=true"
    - "--set=services.nginx.url=http://bundle_server"
    - "--set=bundles.nginx.service=nginx"
    - "--set=bundles.nginx.resource=bundles/bundle.tar.gz"
    depends_on:
    - bundle_server
  bundle_server:
    image: nginx:1.20.0-alpine
    ports:
    - 8888:80
    volumes:
    - ./authz:/usr/share/nginx/html/bundles
volumes:
  db:
    driver: local